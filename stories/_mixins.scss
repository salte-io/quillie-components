@use './variables' as *;

@function fallback($values...) {
  @each $value in $values {
    @if $value != null {
      @return $value;
    }
  }

  @return null;
}

@mixin spread($offset) {
  top: #{0 + $offset};
  bottom: #{0 + $offset};
  left: #{0 + $offset};
  right: #{0 + $offset};
}

@mixin fixed($offset: 0) {
  @include spread($offset);

  position: absolute;
}

@mixin absolute($offset: 0) {
  @include spread($offset);

  position: absolute;
}

@mixin hover() {
  cursor: pointer;

  &::before {
    @include absolute(0);
    @include transition(opacity);

    border-radius: inherit;
    pointer-events: none;
    content: '';
    background-color: $hover;
    opacity: 0;
  }

  &:hover::before,
  &:focus::before {
    opacity: 1;
  }
}

@mixin disabled() {
  color: $primary-accent;
  background-color: $disabled;
  pointer-events: none;
}

@mixin transition($properties...) {
  transition: 0.15s ease-in-out;
  transition-property: $properties;
}

@mixin loading($visibleWhenLoading: false, $path: '') {
  @include transition(opacity);

  @if $visibleWhenLoading {
    &:not(.loading) #{$path} {
      opacity: 0;
    }

    &.loading #{$path} {
      opacity: 1;
    }
  } @else {
    &:not(.loading) #{$path} {
      opacity: 1;
    }

    &.loading #{$path} {
      opacity: 0;
    }
  }
}

@mixin for-phone-only {
  @media (max-width: 599px) { @content; }
}
@mixin for-tablet {
  @media (min-width: 600px) and (max-width: 900px) { @content; }
}
@mixin for-desktop {
  @media (min-width: 901px) { @content; }
}
