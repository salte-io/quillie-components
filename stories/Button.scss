@use './variables' as *;
@use './mixins' as *;

@mixin button($color, $background-color, $overrideColor: null) {
  &:not(.inverse) {
    color: fallback($overrideColor, $color);
    background-color: $background-color;

    &:hover {
      color: $background-color;
      background-color: $color;
    }
  }

  &.inverse {
    color: $background-color;
    background-color: $color;

    &:hover {
      color: fallback($overrideColor, $color);
      background-color: $background-color;
    }
  }
}

a.button {
  text-decoration: none;
}

.button {
  @include transition(color, background-color);
  @include loading(false, '> .content');

  display: inline-block;
  white-space: nowrap;
  position: relative;

  min-height: $min-component-size;
  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
  font-weight: 700;
  font-size: 15px;
  border: 0;
  border-radius: $border-radius;
  cursor: pointer;
  line-height: 1;
  padding: 0 10px;
  outline: none;

  &:not(.disabled) {
    &.primary {
      @include button($secondary, $primary);
    }

    &.primary-transparent {
      @include button(transparent, $primary, $primary-accent);
    }

    &.secondary {
      @include button($primary-accent, $secondary);
    }

    &.secondary-transparent {
      @include button(transparent, $secondary, $primary-accent);
    }
  }

  &.disabled {
    @include disabled();
  }

  > .content {
    height: 100%;
  }
}
